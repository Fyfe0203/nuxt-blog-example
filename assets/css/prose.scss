html {
    .prose {
        --tw-prose-body: #3f3f46;
        --tw-prose-headings: #18181b;
        --tw-prose-links: #10b981;
        --tw-prose-links-hover: #059669;
        --tw-prose-links-underline: rgba(16, 185, 129, 0.3);
        --tw-prose-bold: #18181b;
        --tw-prose-counters: #71717a;
        --tw-prose-bullets: #d4d4d8;
        --tw-prose-hr: rgba(24, 24, 27, 0.05);
        --tw-prose-quotes: #18181b;
        --tw-prose-quote-borders: #e4e4e7;
        --tw-prose-captions: #71717a;
        --tw-prose-code: #18181b;
        --tw-prose-code-bg: #f4f4f5;
        --tw-prose-code-ring: #d4d4d8;
        --tw-prose-th-borders: #d4d4d8;
        --tw-prose-td-borders: #e4e4e7;
        --tw-prose-invert-body: #a1a1aa;
        --tw-prose-invert-headings: #fff;
        --tw-prose-invert-links: #34d399;
        --tw-prose-invert-links-hover: #10b981;
        --tw-prose-invert-links-underline: rgba(16, 185, 129, 0.3);
        --tw-prose-invert-bold: #fff;
        --tw-prose-invert-counters: #a1a1aa;
        --tw-prose-invert-bullets: #52525b;
        --tw-prose-invert-hr: hsla(0, 0%, 100%, 0.05);
        --tw-prose-invert-quotes: #f4f4f5;
        --tw-prose-invert-quote-borders: #3f3f46;
        --tw-prose-invert-captions: #a1a1aa;
        --tw-prose-invert-code: #fff;
        --tw-prose-invert-code-bg: rgba(63, 63, 70, 0.15);
        --tw-prose-invert-code-ring: hsla(0, 0%, 100%, 0.1);
        --tw-prose-invert-th-borders: #52525b;
        --tw-prose-invert-td-borders: #3f3f46;
        color: var(--tw-prose-body);
        font-size: 0.875rem;
        line-height: 1.75rem;

        max-width: 100%;
    }

    .prose :where(.prose > *):not(:where([class~='not-prose'] *)) {
        // max-width: 42rem;
        margin-left: auto;
        margin-right: auto;
    }

    @media (min-width: 1024px) {
        .prose :where(.prose > *):not(:where([class~='not-prose'] *)) {
            // max-width: 48rem;
            margin-left: calc(50% - min(50%, 32rem));
            margin-right: calc(50% - min(50%, 32rem));
        }
    }

    .prose :where(p):not(:where([class~='not-prose'] *)) {
        margin-top: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
        font-size: 1rem;
        line-height: 1.5rem;
    }

    .prose :where(ol):not(:where([class~='not-prose'] *)) {
        list-style-type: decimal;
        margin-top: 1.25rem;
        margin-bottom: 1.25rem;
        padding-left: 1.625rem;
    }

    .prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
        list-style-type: upper-alpha;
    }

    .prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
        list-style-type: lower-alpha;
    }

    .prose :where(ol[type='A s']):not(:where([class~='not-prose'] *)) {
        list-style-type: upper-alpha;
    }

    .prose :where(ol[type='a s']):not(:where([class~='not-prose'] *)) {
        list-style-type: lower-alpha;
    }

    .prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
        list-style-type: upper-roman;
    }

    .prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
        list-style-type: lower-roman;
    }

    .prose :where(ol[type='I s']):not(:where([class~='not-prose'] *)) {
        list-style-type: upper-roman;
    }

    .prose :where(ol[type='i s']):not(:where([class~='not-prose'] *)) {
        list-style-type: lower-roman;
    }

    .prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
        list-style-type: decimal;
    }

    .prose :where(ul):not(:where([class~='not-prose'] *)) {
        list-style-type: disc;
        margin-top: 1.25rem;
        margin-bottom: 1.25rem;
        padding-left: 1.625rem;
    }

    .prose :where(li):not(:where([class~='not-prose'] *)) {
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .prose :where(:is(ol, ul) > li):not(:where([class~='not-prose'] *)) {
        padding-left: 0.375rem;
    }

    .prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
        font-weight: 400;
        color: var(--tw-prose-counters);
    }

    .prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
        color: var(--tw-prose-bullets);
    }

    .prose :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
        margin-top: 0.75rem;
        margin-bottom: 0.75rem;
    }

    .prose :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
        margin-top: 1.25rem;
    }

    .prose :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
        margin-bottom: 1.25rem;
    }

    .prose :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
        margin-top: 1.25rem;
    }

    .prose :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
        margin-bottom: 1.25rem;
    }

    .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
        margin-top: 0.75rem;
        margin-bottom: 0.75rem;
    }

    .prose :where(hr):not(:where([class~='not-prose'] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1px;
        max-width: none;
        margin: 4rem calc(-1 * 1rem);
    }

    @media (min-width: 640px) {
        .prose :where(hr):not(:where([class~='not-prose'] *)) {
            margin-left: calc(-1 * 1.5rem);
            margin-right: calc(-1 * 1.5rem);
        }
    }

    @media (min-width: 1024px) {
        .prose :where(hr):not(:where([class~='not-prose'] *)) {
            margin-left: calc(-1 * 2rem);
            margin-right: calc(-1 * 2rem);
        }
    }

    .prose :where(blockquote):not(:where([class~='not-prose'] *)) {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-left-width: 0.25rem;
        border-left-color: var(--tw-prose-quote-borders);
        quotes: '\201C' '\201D' '\2018' '\2019';
        margin-top: 2rem;
        margin-bottom: 2rem;
        padding-left: 1.25rem;
    }

    .prose :where(blockquote p:first-of-type):not(:where([class~='not-prose'] *)):before {
        content: open-quote;
    }

    .prose :where(blockquote p:last-of-type):not(:where([class~='not-prose'] *)):after {
        content: close-quote;
    }

    .prose :where(h1):not(:where([class~='not-prose'] *)) {
        color: var(--tw-prose-headings);
        font-weight: 700;
        font-size: 1.5rem;
        line-height: 2rem;
        margin-bottom: 0.5rem;
    }

    .prose :where(h2):not(:where([class~='not-prose'] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        font-size: 1.125rem;
        line-height: 1.75rem;
        margin-top: 4rem;
        margin-bottom: 0.5rem;
    }

    .prose :where(h3):not(:where([class~='not-prose'] *)) {
        color: var(--tw-prose-headings);
        font-size: 1rem;
        line-height: 1.5rem;
        font-weight: 600;
        margin-top: 2.5rem;
        margin-bottom: 1rem;
    }

    .prose :where(img, video, figure):not(:where([class~='not-prose'] *)) {
        margin-top: 2rem;
        margin-bottom: 2rem;
    }

    .prose :where(figure > *):not(:where([class~='not-prose'] *)) {
        margin-top: 0;
        margin-bottom: 0;
    }

    .prose :where(figcaption):not(:where([class~='not-prose'] *)) {
        color: var(--tw-prose-captions);
        font-size: 0.75rem;
        line-height: 1rem;
        margin-top: 0.5rem;
    }

    .prose :where(table):not(:where([class~='not-prose'] *)) {
        width: 100%;
        table-layout: auto;
        text-align: left;
        margin-top: 2rem;
        margin-bottom: 2rem;
        line-height: 1.5rem;
    }

    .prose :where(thead):not(:where([class~='not-prose'] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders);
    }

    .prose :where(thead th):not(:where([class~='not-prose'] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        vertical-align: bottom;
        padding-right: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0.5rem;
    }

    .prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
        padding-left: 0;
    }

    .prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
        padding-right: 0;
    }

    .prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders);
    }

    .prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
        border-bottom-width: 0;
    }

    .prose :where(tbody td):not(:where([class~='not-prose'] *)) {
        vertical-align: baseline;
    }

    .prose :where(tfoot):not(:where([class~='not-prose'] *)) {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders);
    }

    .prose :where(tfoot td):not(:where([class~='not-prose'] *)) {
        vertical-align: top;
    }

    .prose :where(:is(tbody, tfoot) td):not(:where([class~='not-prose'] *)) {
        padding: 0.5rem;
    }

    .prose :where(:is(tbody, tfoot) td:first-child):not(:where([class~='not-prose'] *)) {
        padding-left: 0;
    }

    .prose :where(:is(tbody, tfoot) td:last-child):not(:where([class~='not-prose'] *)) {
        padding-right: 0;
    }

    .prose :where(a):not(:where([class~='not-prose'] *)) {
        color: var(--tw-prose-links);
        -webkit-text-decoration: underline transparent;
        text-decoration: underline transparent;
        font-weight: 500;
        transition-property: color, text-decoration-color;
        transition-duration: 0.15s;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }

    .prose :where(a):not(:where([class~='not-prose'] *)):hover {
        color: var(--tw-prose-links-hover);
        text-decoration-color: var(--tw-prose-links-underline);
    }

    .prose :where(:is(h1, h2, h3) a):not(:where([class~='not-prose'] *)) {
        font-weight: inherit;
    }

    .prose :where(strong):not(:where([class~='not-prose'] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600;
    }

    .prose :where(:is(a, blockquote, thead th) strong):not(:where([class~='not-prose'] *)) {
        color: inherit;
    }

    .prose code.inline-code {
        color: var(--tw-prose-code);
        border-radius: 0.5rem;
        padding: 0.25rem 0.375rem;
        box-shadow: inset 0 0 0 1px var(--tw-prose-code-ring);
        background-color: var(--tw-prose-code-bg);
    }

    .prose :where(:is(a, h1, h2, h3, blockquote, thead th) code):not(:where([class~='not-prose'] *)) {
        color: inherit;
    }

    .prose :where(h2 code):not(:where([class~='not-prose'] *)) {
        font-size: 1rem;
        font-weight: inherit;
    }

    .prose :where(h3 code):not(:where([class~='not-prose'] *)) {
        font-size: 0.875rem;
        font-weight: inherit;
    }

    .prose :where(:is(h1, h2, h3) + *):not(:where([class~='not-prose'] *)) {
        margin-top: 0;
    }

    .prose :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
        margin-top: 0 !important;
    }

    .prose :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
        margin-bottom: 0 !important;
    }

    .prose :where(code)::before,
    .prose :where(code)::after {
        content: '';
        display: none;
    }

    .prose :where(code.group):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
        font-size: 0.875em;
    }

    .prose :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
        margin: 0;
        padding: 20px;
    }

    .prose .pre-outer {
        background-color: var(--tw-prose-pre-bg);
        border-radius: 0.375rem;
    }
    .prose .sr-only {
        display: none;
    }
}
